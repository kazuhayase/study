20230115 virtual box p2v from windows install



[]
BlueScreenループから抜け出せないので、このあたりを読んで見る。
Linux Mint の boot-repairでブートローダを修復する手順
https://snowsystem.net/other/linux/grub-boot-drive-repair/

GRUB2をUSBメモリにインストール
https://webzoit.net/hp/it/internet/homepage/env/cs/bootstrap/multiboot/usb_memory_stick/usb_gpt_grub2/howto/grub2-install/

grub で boot するメモ
https://www.oit.ac.jp/rd/labs/kobayashi-lab/~yagshi/old_web/misc/grubboot.html

-----
最初の方のSnapshotに戻しても何度かリブートすると、BlueScreenループに陥る。
https://freesoft.tvbok.com/tips/efi_installation/uefi_bootrec.html
↑　windows boot isoからBCD関連で復旧できるかも？


bootrec /fixboot
アクセスが拒否されました
https://jp.easeus.com/partition-manager/bootrec-fixboot.html
には、
B:
bcdboot C:\windows /s B: /f UEFI
せよ、と書いてあるが。



[] Windowsが重たい
https://aresei-note.com/8255
仮想メモリ使わない（ページファイルなし）とか

設定したら再度ブルースクリーン。。。



[*] 結局、Aomei で作成したBootable＋イメージでOSインストール＋回復

https://www.ubackup.com/jp/features/system-restore-from-disc.html

AOMEI（Windows上）
1. USBメモリ(2GB)でブータブルメモリを作成（数百MB）
2. イメージバックアップを作成（USB接続HDD,NTFSフォーマット）

VirtualBox（Ubuntu上）
1. VirtualBoxで、SDD(115GB)の.vdi仮想ディスクを作成
2. 起動するとGrubになるので、exitしてUEFI画面
3. 「デバイス」メニューで、USBメモリ(2GB)（=AOMEI Bootable）をチェックしてGuest側に接続
4. UEFI画面でBoot Manager(だったと思う)で、USBメモリを指定してExitするとBootする
5. Virtualbox「デバイス」メニューで、USB接続HDDをチェックしてGuest側に接続
6. AOMEIのBootableで起動するので、「復元」から「イメージファイルを選択」
7. 「このシステムイメージを復元」で、USB接続HDD（115GBで空のまま）を指定
8. 復元後、起動するが、Grubのプロンプトになる

https://kernhack.hatenablog.com/entry/2018/05/03/220214
Grubのプロンプトで、
grub> pager=1
grub> ls (hd0,gpt1)
とかで、efi以下があることを確認

https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11272114241

Grubのプロンプトで、
grub> search --set=root --file /EFI/Microsoft/Boot/bootmgfw.efi
grub> chainloader /EFI/Microsoft/Boot/bootmgfw.efi
grub> boot
で、起動できた。

Windowsでは問題が起きたため、PINをセットアップ
-->無事、Windowsが元の状態で立ち上がる。

[] EFIのUbuntuのgrub.cfgのUUIDを編集
ubuntuの isoイメージで起動
sudo mkdir /mnt/efi
sudo mount /dev/sda1 /mnt/efi
cd /mnt/efi/EFI/ubuntu
sudo cp grub.cfg grub.cfg.org.20230203
UbuntuのDISKsツールで表示された ACAA-FA53 
fdisk では、44042082-2D99-46C1-8B40-6E3E4AF532E6 に変更してみる

これではだめかと思ったけど、どうも、２回目からは読み込んでいるようなので、このままとする。
再起動では読み込んでいたが、電源落とすとだめだった。

grub.cfgに以下を追加してみる。

menuentry "Windows" {
search --set=root --file /EFI/Microsoft/Boot/bootmgfw.efi
chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}


うまく行くこともあるので、様子見する。(02/03〜)

だめだったら、以下を試してみる。



[] diskpartでWindows10/8のUEFIを修復
https://jp.easeus.com/partition-manager/fix-uefi-error-in-windows-10-8-7.html


(ここでSnapShotを作成中に致命的エラー)

仮想マシンの実行中に致命的な問題が起き、マシンの実行が停止します。
http://www.virtualbox.org のコミュニティセクションを確認するか、サポート契約を確認してください。その際は仮想マシンのログディレクトリにあるログファイル VBox.log の中身を提供してください。同時にエラーが起きた時に何をしたのかの情報も提供してください。前述のファイルはVirtualBoxウィンドウの仮想マシン  にある ログを参照 からでもアクセスできます。
OK ボタンを押して仮想マシンの電源を切ります。

Result Code:
VBOX_E_INVALID_VM_STATE (0X80BB0002)
Component:
ConsoleWrap
Interface:
IConsole {6ac83d89-6ee7-4e33-8ae6-b257b2e81be8}




========
もしかしたら、EFIのGrub.cfgを編集する？
https://datyotosanpo.blog.fc2.com/blog-entry-90.html


---------------------------------------------------------------------------------------------------------
WindowsのisoファイルでOSをインストール。

[] 回復メディアでOS再インストール＋システムイメージのリストア
https://www.fleaz-mobile.com/win10_recovery/index.html
に書いてある手順。

　(1) 移行元で回復ドライブの作成
　(2) 移行元でシステムイメージのバックアップ
　(3) システムの復元

青い画面で、トラブルシューティング＞詳細オプション＞イメージでシステムを回復
で、エラーが出る。多分、BackupのUSB DISKが見えてない。



　　　1. 回復メディアでOS再インストール
　　　---> extension packを入れて置かないとUSBで起動しない。

https://www.kfactory.net/2020/07/windows10.html
　「PCを回復できません。システムドライブが小さすぎます」となるので、
sources 内    $PBR_ResetConfig.xml　を編集。（オリジナルファイルは、このGithubディレクトリにコピーした）

　　　2. システムイメージの復元



[] 
vmdk をSSDにコピーしつけ直したら、同じUUIDだと言われたので前のものを削除
isoをつけて、Ubuntu-Liveを起動
update-grub2をする。以下参照
https://askubuntu.com/questions/254491/failed-to-get-canonical-path-of-cow

mkdir /mnt/chrootdir
mount /dev/sda1 /mnt/chrootdir
for dir in proc dev sys etc bin sbin var usr lib lib64 tmp; do
    mkdir /mnt/chrootdir/$dir && mount --bind /$dir /mnt/chrootdir/$dir
done
chroot /mnt/chrootdir
grub-install /dev/sda # May not be required　＜ーーエラー
update-grub2

エラー
Installing for i386-pc platform.
grub-install: warning: this GPT partition label contains no BIOS Boot Partition; embedding won't be possible.
grub-install: warning: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
grub-install: error: will not proceed with blocklists.


ー＞これをする前に、BIOS Boot Partitionを作る必要がある。
https://www.miraclelinux.com/tech-blog/qwi8ni
https://conveniencedailylife.blog.fc2.com/blog-entry-282.html

ーー＞エラー解消

ーーーーー
/dev/sda1が消えてしまったようなので、clonezillaでコピーしてもどす。

samba クライアントがNT1をサポートするよう設定し直す

sudo apt install smbclient
vi /etc/samba/smb.conf

https://ubuntuforums.org/archive/index.php/t-2447575.html
---
client min protocol = NT1
server min protocol = NT1
client lanman auth = yes
ntlm auth = yes





[-1] mod sign がわからないので、Secure bootを外した。
Virtualbox でVMDK読み込んだらGrubのShellになったので、以下の通りやったら動いた。が、とても時間がかかる。


https://stackoverflow.com/questions/51101487/booting-raw-disk-windows-10-vm-in-virtualbox-boots-to-grub-shell
-----------
insmod chain
set root=(hd0,gpt1)
chainloader /EFI/Microsoft/Boot/bootmgfw.efi
boot
-----------

[0] mod sign
https://ubuntu.com/blog/how-to-sign-things-for-secure-boot

$ sudo mokutil --list-enrolled
...
        Issuer: C=GB, ST=Isle of Man, L=Douglas, O=Canonical Ltd., CN=Canonical Ltd. Master Certificate Authority
...
$ sudo mokutil --test-key /var/lib/shim-signed/mok/MOK.der 
/var/lib/shim-signed/mok/MOK.der is already enrolled
??? 怪しい


$ sudo mokutil --list-new
        Issuer: CN=1607LM-iHS303S-A-IIYAMA-H110M-S Secure Boot Module Signature key

--> reboot

sudo mokutil --import /var/lib/shim-signed/mok/MOK.der

sudo mokutil --help
sudo mokutil --list-enrolled
sudo mokutil --help
sudo mokutil --test-key /var/lib/shim-signed/mok/MOK.der 
sudo mokutil --import /var/lib/shim-signed/mok/MOK.der 
sudo mokutil --test-key /var/lib/shim-signed/mok/MOK.der 
sudo mokutil --list-new
sudo mokutil --list-enrolled
sudo mokutil --list-new
sudo mokutil --help
exit
sudo /sbin/vboxconfig 
df .


There were problems setting up VirtualBox.  To re-start the set-up process, run
  /sbin/vboxconfig
as root.  If your system is using EFI Secure Boot you may need to sign the
kernel modules (vboxdrv, vboxnetflt, vboxnetadp, vboxpci) before you can load
them. Please see your Linux system's documentation for more information.

https://kledgeb.blogspot.com/2020/06/ubuntu-2004-74-ubuntuuefi.html

$ sudo update-secureboot-policy --enroll-key
No DKMS modules installed.

https://wiki.ubuntu.com/UEFI/SecureBoot/Signing

kmodsign is used exclusively to sign kernel modules. It also requires the signing certificates to be in a different format than sbsigntool; for kmodsign, the certificates need to be in DER format. Conveniently, if you need to use DKMS modules, an appropriate certificate may already exist in /var/lib/shim-signed/mok.
To sign a custom module, in this example with the generated MOK already available on a system:

$ sudo kmodsign sha512 \
    /var/lib/shim-signed/mok/MOK.priv \
    /var/lib/shim-signed/mok/MOK.der \
    module.ko

$ ls -l /var/lib/shim-signed/mok/
合計 8
-rw-r--r-- 1 root root  960  9月 16  2018 MOK.der
-rw------- 1 root root 1708  9月 16  2018 MOK.priv
$ sudo file /var/lib/shim-signed/mok/*
/var/lib/shim-signed/mok/MOK.der:  Certificate, Version=3, Serial=00829433342cab2662, Issuer=1607LM-iHS303S-A-IIYAMA-H110M-S Secure Boot Module Signature key, not-valid-before=2018-09-16 00:26:29 GMT, Subject=1607LM-iHS303S-A-IIYAMA-H110M-S Secure Boot Module Signature key
/var/lib/shim-signed/mok/MOK.priv: ASCII text

だったので、





(1) ntfs ファイルシステムを最小化
https://www.diskpart.com/jp/articles/unable-to-shrink-c-drive.html
一旦、ページファイル等を無効化して、サイズを小さくした後、有効化する。

他にSATAディスクが接続されていないと、ページファイルは自動的に作られてしまうので、
縮小し、パーティションを追加して、そこにページファイルを置くようにして、もう一度再起動してから、縮小する。

SystemPropertiesProtection.exe
システムの保護無効

管理者としてCMD起動して、
powercfg.exe /hibernate off
powercfg.exe /a

SystemPropertiesPerformance.exe
ページングファイルなし

sysdm.cpl
詳細情報＞デバッグ情報の書き込み

この中でシステムのプロパティを開くには、  sysdm.cpl　を実行する
https://atmarkit.itmedia.co.jp/ait/articles/1811/01/news019.html


移動できないファイルの削除
https://www.diskpart.com/jp/articles/shrink-volume-with-unmovable-files.html


ステップ 1. Windows 10である場合、ファイルの「フォルダーと検索のオプションの変更」をクリックして、「表示」を開きます。「保護されたオペレーティングシステムファイルを表示しない（推奨）」をチェックしません。
ステップ 2. 「隠しファイル、隠しフォルダー、および隠しドライブを表示する」をチェックします。この問題を解決するために、できる限り沢山のシステムファイルを無効にする必要があります。
ステップ 3. システムの保護を無効にして、「ディスク領域の解放」と「ドライブのデフラグと最適化」を実行します。Windowsの検索ボックスから、それらを簡単に見つけられます。
ステップ 4. コマンドプロンプトから「powercfg /hibernate off」コマンドを実行して、ハイバネーションを無効にします。
ステップ 5. カーネルメモリダンプを無効にします。詳細設定/起動と回復/設定に移動して、「デバイス情報の書き込み」のドロップダウンメニューを「なし」に変更します。
ステップ 6. コントロールパネル\システムとセキュリティ/システム/システムの詳細設定/パフォーマンス下の設定/詳細設定/変更のページングファイルを無効にします。またファイルエクスプローラーでc:\pagefile.sysファイルを削除します。




https://www.aomei.jp/articles/can-not-shrink-volume.html
システムの保護⇒復元ポイントの削除





https://www.kerislab.jp/posts/2021-01-05-ntfs-hdd-rescue/

(1) ddrescue /dev/sda 
sudo ddrescue /dev/sda /mnt/Backup/DD-H110M/sda-ASP550SS7-480GM.img ddrescue_hdd.map

(2) P2V
    VBoxManage convertfromraw --format VDI sda-ASP550SS7-480GM.img dd2vdi-win10.vdi

(3) VirtualBox 起動はできたが、ものすごく時間がかかる。ファイルが大きいからかも。(317GB)
https://golorih.exblog.jp/11730663/
を見ると、ntfscloneが効率良いらしい。
[-q 　優先度: ntfsclone > partimage > dd]
partcloneはpartimageよりも新しいらしい


-----


(1) clonezilla backup

SSD 全体-> Backup　もしくは各パーティション指定で

/dev/sda1 : UUID="ACAA-FA53" : /boot/efi  273MB, FAT(32bit), EFI System
/dev/sda2 : 17MB, Microsoft Reserved 
/dev/sda3 : UUID="9AEEB068EEB03DF7" : /mnt/Windows 379GB - 95GB空き, NTFS, Basic Data
/dev/sda4 : UUID="2E9C11279C10EADB" : 623MB, NTFS, Microsoft Windows Recovery Environment (System, No Automount)
/dev/sda5 : UUID="207dcc00-9e2f-4a35-a472-3501ab906455" : / (root), 83GB - 7.7GB空き, Ext4, Linux Filesystem
/dev/sda6 : UUID="4a2d9b84-3352-481d-9304-dae9371c98ff" : swap, 17GB, Linux Swap (No Automount)
未割り当て 473MB

(2) dd | VBoxManage convertfromraw でのP2V

(3) Vboxで読み込んで見る
 --> grub プロンプトになる。
 　　　grub> 

 https://stackoverflow.com/questions/51101487/booting-raw-disk-windows-10-vm-in-virtualbox-boots-to-grub-shell
 https://kernhack.hatenablog.com/entry/2018/05/03/220214

を参考に。

setコマンドでrootを確認。(hd0,gpt5)

set


insmod chain
set root=(hd0,gpt5)
chainloader (hd0,gpt1)/efi/Microsoft/Boot/bootmgfw.efi
^---> /EndEntire と出てくる？

boot失敗すると、青い画面になるので、EFIファームの画面を選ぶ

https://mattintosh.hatenablog.com/entry/20180308/1520518082

のBoot From Fileを参考に。




https://wiki.archlinux.org/title/VirtualBox

MBR + EFI + MS reserve + MS base primary + Windows recovery
BS=512
sectnum=741289984

512*741289984
=379540471808


なので、

# dd if=/dev/sda bs=512 count=741289984 | VBoxManage convertfromraw stdin /mnt/WinMac0001/VMWare/p2vwin10.vdi 379540471808

ディスク /dev/sda: 447.13 GiB, 480103981056 バイト, 937703088 セクタ
Disk model: ASP550SS7-480GM-
単位: セクタ (1 * 512 = 512 バイト)
セクタサイズ (論理 / 物理): 512 バイト / 512 バイト
I/O サイズ (最小 / 推奨): 512 バイト / 512 バイト
ディスクラベルのタイプ: gpt
ディスク識別子: 2B745F08-0CD9-4ED6-8AF6-3315EFEA1EA0

デバイス    開始位置  最後から    セクタ サイズ タイプ
/dev/sda1       2048    534527    532480   260M EFI システム
/dev/sda2     534528    567295     32768    16M Microsoft 予約領域
/dev/sda3     567296 740071852 739504557 352.6G Microsoft 基本データ
/dev/sda4  740073472 741289983   1216512   594M Windows リカバリ環境
/dev/sda5  741292032 903475199 162183168  77.3G Linux ファイルシステム
/dev/sda6  903475200 936779775  33304576  15.9G Linux スワップ

-------
230122 update
HD-PETU2 500GB (/dev/sdf) でdd|VBoxManage

CloneZillaでコピーしたので、下の値は同じ。
MBR + EFI + MS reserve + MS base primary + Windows recovery
BS=512
sectnum=741289984

512*741289984
=379540471808

なので、

# sudo dd if=/dev/sdf bs=512 count=741289984 | VBoxManage convertfromraw stdin /mnt/WinMac0001/VMWare/p2vwin10.vdi 379540471808
# sudo cp /mnt/WinMac0001/VMWare/p2vwin10.vdi /mnt/Backup/VM-H110M/


ディスク /dev/sdf: 465.76 GiB, 500107862016 バイト, 976773168 セクタ
Disk model: HD-PETU2        
単位: セクタ (1 * 512 = 512 バイト)
セクタサイズ (論理 / 物理): 512 バイト / 512 バイト
I/O サイズ (最小 / 推奨): 512 バイト / 512 バイト
ディスクラベルのタイプ: gpt
ディスク識別子: 2B745F08-0CD9-4ED6-8AF6-3315EFEA1EA0

デバイス    開始位置  最後から    セクタ サイズ タイプ
/dev/sdf1       2048    534527    532480   260M EFI システム
/dev/sdf2     534528    567295     32768    16M Microsoft 予約領域
/dev/sdf3     567296 740071852 739504557 352.6G Microsoft 基本データ
/dev/sdf4  740073472 741289983   1216512   594M Windows リカバリ環境
/dev/sdf5  741292032 903475199 162183168  77.3G Linux ファイルシステム
/dev/sdf6  903475200 936779775  33304576  15.9G Linux スワップ






----
https://wiki.archlinux.org/title/VirtualBox

Tasks on GNU/Linux
Tip: Skip the partition-related parts if you created VHD image with Disk2vhd.
Reduce the native Windows partition size to the size Windows actually needs with ntfsresize available from ntfs-3g. The size you will specify will be the same size of the VDI that will be created in the next step. If this size is too low, you may break your Windows install and the latter might not boot at all.
Use the --no-action option first to run a test:
# ntfsresize --no-action --size 52Gi /dev/sda1
If only the previous test succeeded, execute this command again, but this time without the aforementioned test flag.
Install VirtualBox on your GNU/Linux host (see #Installation steps for Arch Linux hosts if your host is Arch Linux).
Create the Windows disk image from the beginning of the drive to the end of the first partition where is located your Windows installation. Copying from the beginning of the disk is necessary because the MBR space at the beginning of the drive needs to be on the virtual drive along with the Windows partition. In this example two following partitions sda2 and sda3will be later removed from the partition table and the MBR bootloader will be updated.
# sectnum=$(( $(cat /sys/block/sda/sda1/start) + $(cat /sys/block/sda/sda1/size) ))
Using cat /sys/block/sda/sda1/size will output the number of total sectors of the first partition of the disk sda. Adapt where necessary.
# dd if=/dev/sda bs=512 count=$sectnum | VBoxManage convertfromraw stdin windows.vdi $(( $sectnum * 512 ))
We need to display the size in byte, $(( $sectnum * 512 )) will convert the sector numbers to bytes.
Since you created your disk image as root, set the right ownership to the virtual disk image:
# chown your_user:your_group windows.vdi
Create your virtual machine configuration file and use the virtual disk created previously as the main virtual hard disk.
Try to boot your Windows VM, it may just work. First though remove and repair disks from the boot process as it may interfere (and likely will) booting into safe-mode.
Attempt to boot your Windows virtual machine in safe mode (press the F8 key before the Windows logo shows up)... if running into boot issues, read #Fix MBR and Microsoft bootloader. In safe-mode, drivers will be installed likely by the Windows plug-and-play detection mechanism view. Additionally, install the VirtualBox Guest Additions via the menu Devices > Insert Guest Additions CD image.... If a new disk dialog does not appear, navigate to the CD drive and start the installer manually.
You should finally have a working Windows virtual machine. Do not forget to read the #Known limitations.
Performance tip: according to VirtualBox manual, SATA controller has a better performance than IDE. If you cannot boot Windows off virtual SATA controller right away, it is probably due to the lack of SATA drivers. Attach virtual disk to IDE controller, create an empty SATA controller and boot the VM - Windows should automatically install SATA drivers for the controller. You can then shutdown VM, detach virtual disk from IDE controller and attach it to SATA controller instead.
Fix MBR and Microsoft bootloader
If your Windows virtual machine refuses to boot, you may need to apply the following modifications to your virtual machine.

Boot a GNU/Live live distribution inside your virtual machine before Windows starts up.
Remove other partitions entries from the virtual disk MBR. Indeed, since we copied the MBR and only the Windows partition, the entries of the other partitions are still present in the MBR, but the partitions are not available anymore. Use fdisk to achieve this for example.
fdisk ''/dev/sda''
Command (m for help): a
Partition number (''1-3'', default ''3''): ''1''
Write the updated partition table to the disk (this will recreate the MBR) using the m command inside fdisk.
Use testdisk (see here for details) to add a generic MBR:
# testdisk > Disk /dev/sda... > [Proceed] >  [Intel] Intel/PC partition > [MBR Code] Write TestDisk MBR to first sector > Write a new copy of MBR code to first sector? (Y/n) > Y > Write a new copy of MBR code, confirm? (Y/N) > A new copy of MBR code has been written. You have to reboot for the change to take effect. > [OK]
With the new MBR and updated partition table, your Windows virtual machine should be able to boot. If you are still encountering issues, boot your Windows recovery disk from on of the previous step, and inside your Windows RE environment, execute the commands described here.
Known limitations
Your virtual machine can sometimes hang and overrun your RAM, this can be caused by conflicting drivers still installed inside your Windows virtual machine. Good luck to find them!
Additional software expecting a given driver beneath may either not be disabled/uninstalled or needs to be uninstalled first as the drivers that are no longer available.
Your Windows installation must reside on the first partition for the above process to work. If this requirement is not met, the process might be achieved too, but this had not been tested. This will require either copying the MBR and editing in hexadecimal see VirtualBox: booting cloned disk or will require to fix the partition table manually or by repairing Windows with the recovery disk you created in a previous step. Let us consider our Windows installation on the second partition; we will copy the MBR, then the second partition where to the disk image. VBoxManage convertfromraw needs the total number of bytes that will be written: calculated thanks to the size of the MBR (the start of the first partition) plus the size of the second (Windows) partition. { dd if=/dev/sda bs=512 count=$(cat /sys/block/sda/sda1/start) ; dd if=/dev/sda2 bs=512 count=$(cat /sys/block/sda/sda2/size) ; } | VBoxManage convertfromraw stdin windows.vdi $(( ($(cat /sys/block/sda/sda1/start) + $(cat /sys/block/sda/sda2/size)) * 512 ))